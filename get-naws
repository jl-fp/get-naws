#!/bin/bash

NODE_VERSION="v18.17.1"
INSTALL_DIR="$HOME/.naws"
NODE_DIR="$INSTALL_DIR/node-$NODE_VERSION"
NODE_BIN="$NODE_DIR/bin/node"
NPM_BIN="$NODE_DIR/bin/npm"
NAWS_BIN="$NODE_DIR/bin/naws"
NAWS_SCOPE_REGISTRY="@ffa:https://artifactory.flexport.io/artifactory/api/npm/ffa-infra-npm-dev-local"
NAWS_PACKAGE_NAME="@ffa/naws-cli"


# Check if running as root (sudo)
if [ "$EUID" -ne 0 ]; then
    echo "This script requires sudo privileges to install commands globally."
    exit 1
fi

# Create installation directory if it doesn't exist
mkdir -p "$INSTALL_DIR"

# Check if Node.js is already installed
if [ ! -f "$NODE_BIN" ]; then

  echo "naws not found. Installing..."
  
  # Determine platform and architecture
  PLATFORM="$(uname -s | tr '[:upper:]' '[:lower:]')"
  ARCH="$(uname -m)"
  
  # Map architecture to Node.js naming convention
  case "$ARCH" in
    x86_64)
      ARCH="x64"
      ;;
    aarch64|arm64)
      ARCH="arm64"
      ;;
    *)
      echo "Unsupported architecture: $ARCH"
      exit 1
      ;;
  esac
  
  # Download URL
  DOWNLOAD_URL="https://nodejs.org/dist/$NODE_VERSION/node-$NODE_VERSION-$PLATFORM-$ARCH.tar.gz"
  TEMP_FILE="$INSTALL_DIR/node-$NODE_VERSION.tar.gz"
  
  echo "Downloading from $DOWNLOAD_URL"
  curl -L "$DOWNLOAD_URL" -o "$TEMP_FILE"
  
  if [ $? -ne 0 ]; then
    echo "Failed to download Node.js"
    exit 1
  fi
  
  # Extract Node.js
  echo "Extracting Node.js..."
  tar -xzf "$TEMP_FILE" -C "$INSTALL_DIR"
  
  if [ $? -ne 0 ]; then
    echo "Failed to extract Node.js"
    exit 1
  fi
  
  # Rename the extracted directory to our standard name
  mv "$INSTALL_DIR/node-$NODE_VERSION-$PLATFORM-$ARCH" "$NODE_DIR"
  
  # Clean up
  rm "$TEMP_FILE"
  
  echo "Node.js $NODE_VERSION installed successfully"
else
  echo "Node.js is already installed"
  echo "Current Node.js version is $($NODE_BIN --version)"
fi

echo "Installing $NAWS_PACKAGE_NAME..."

"$NPM_BIN" --prefix $NODE_DIR install -g $NAWS_PACKAGE_NAME --scope-registry=$NAWS_SCOPE_REGISTRY 

echo "$NAWS_PACKAGE_NAME $($NAWS_BIN --version) installed"

if [ ! -f "/usr/local/bin/naws" ]; then
  echo "Creating symlink for naws"
  # requires sudo
  ln -s $NODE_DIR/bin/naws /usr/local/bin/naws
fi

echo "You can now run 'naws' in your terminal."
echo "To update naws, run 'get-naws'"